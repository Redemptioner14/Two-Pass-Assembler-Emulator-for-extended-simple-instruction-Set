/*****************************************************************************
TITLE: Claims																																
AUTHOR: Prem Bhawnani (1801CS65)
Declaration of Authorship
This txt file, claims.txt, is part of the assignment of CS321 - CS322 at the 
department of Computer Science and Engg, IIT Patna . 
*****************************************************************************/

Files:
==========
*All the files i submitted, asm.cpp and claims.txt, have my name and student id at the start, along with a declaration of authorship.

The evidence for Assembler including the output files from the four test examples given (test1 to test4) and bubblesort has also been uploaded. They are test1(3 output files), test2(1 output file), test3(3 output files), 
test4(3 output files) and MyBubbleSort(3 output files) and two additional test (with output files). All the test files have been tested and work properly. 


Compilation instructions:
=========================

    g++ asm.cpp
    ./a.out

    * Input file named “input.txt” must be present in the same folder where the code is executed
    * Ouput files -> logfile.log and if there are no errors then machineCode.o file and listfile.lst file


Assumptions:
============
    * Mnemonic named “data” is always used at the end of assembly code.
    * Listing file (.lst) and Object file(.o) are generated only when there are no errors in the input Assembly code,  
      otherwise only Error file (.log) is generated.


=============================
Program format and structure:
=============================
1. The assembler:
    
    * Every instruction is implemented.
    * It contains a table of instruction names and expected operands.
    * It is a 2 pass assembler (implemented in asm.cpp)
    * outputs the required correct information in the form of three files
       *  .log file for errors and warnings
       *  .lst file for listing 
       *  .o file for machine code object
    * All important errors are diagnosed and corresponding error file gets generated (named logfile.log)
    * consistent and sensible formatting with sensible program structure. 
    * sensible variable, function & type names with explanatory comments.
		* Advanced listing file gets generated. (named listfile.lst)
		* assembles test programs (including bubble sort)
        * Machine code object file gets generated (named machineCode.o)
	  * SET instruction is also implemented (which carries extra marks).
    *  Code is written in C++ with optimum time and space complexity.
    * Additional tests with outputs is also included


=============================
Testing:
=============================

1. The assembler:

I have tested  five examples(4 test files and bubblesort) shown as bellow. The errors only occurred in the file test2.asm and the program immediately stopped on the second pass. 

The others were tested without any errors detected and produced three output files, listing file, 
error log file and machine readable object file, for each example.

1)
#Input: test1.asm
#Output: 
a. test1.lst 
b. test1.log (without any error messages)
c. test1.o

2)
#Input: test2.asm
#Output: 
a. test2.log (with error messages shown as below and also in log file)

error messages:
Line: 4 ERROR: Duplicate label definition
Line: 5 ERROR: no such label
Line: 6 ERROR: Invalid format: not a valid label or a number
Line: 7 ERROR: Missing operand
Line: 8 ERROR: unexpected operand
Line: 9 ERROR: extra on end of line
Line: 10 ERROR: Bogus Label name
Line: 11 ERROR: Bogus Mnemonic
Line: 12 ERROR: Bogus Mnemonic

3)
#Input:asm test3.asm
#Output: 
a. test3.lst 
b. test3.log (without any error messages)
c. test3.o

4)
#Input: test4.asm
#Output: 
a. test4.lst 
b. test4.log (without any error messages)
c. test4.o

5)
#Input: MyBubbleSort.asm
#Output: 
a. MyBubbleSort.lst 
b. MyBubbleSort.log (without any error messages)
c. MyBubbleSort.o

Additional Tests:
=================
6) 
#Input: custom1.asm
#Output:
a. custom1.log (with error messages shown as below and also in log file)

error messages:
Line: 2 ERROR: Invalid format: not a valid label or a number
Line: 3 ERROR: Bogus Mnemonic
Line: 5 ERROR: Duplicate label definition
Line: 6 ERROR: Bogus Label name
Line: 7 ERROR: Bogus Mnemonic
Line: 8 ERROR: Bogus Mnemonic
Line: 9 ERROR: Bogus Mnemonic
Line: 10 ERROR: Missing operand
Line: 11 ERROR: unexpected operand
Line: 12 ERROR: Bogus Label name

7) 
#Input: custom2.asm
#Output:
a. custom2.lst
b. custom2.log (without any error messages)
b. custom2..o
